#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: github-action-deploy-ecspresso

# Tags of this project
tags:
  - github-action

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/github-action-deploy-ecspresso

# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse/github-action-deploy-ecspresso.svg?style=for-the-badge
    url: https://github.com/cloudposse/github-action-deploy-ecspresso/releases/latest
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/cloudposse/github-action-deploy-ecspresso.svg?style=for-the-badge
    url: https://github.com/cloudposse/github-action-deploy-ecspresso/commits
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://cloudposse.com/slack

# List any related terraform modules that this module may be used with or that this module depends on.
related: []

# Short description of this project
description: Deploy on ECS with [Escpresso](https://github.com/kayac/ecspresso)

introduction: |-
  This is template repository to create composite GitHub Actions. 
  Feel free to use it as reference and starting point.

references:
  - name: "github-actions-workflows"
    description: "Reusable workflows for different types of projects"
    url: "https://github.com/cloudposse/github-actions-workflows"
  - name: "example-github-action-release-workflow"
    description: "Example application with complicated release workflow"
    url: "https://github.com/cloudposse/example-github-action-release-workflow"

# How to use this project
usage: |-
  ```yaml
    name: Pull Request
    on:
      push:
        branches: [ 'main' ]

    jobs:
      context:
        runs-on: ubuntu-latest
        steps:
          - name: Example action
            uses: cloudposse/example-github-action-deploy-ecspresso@main
            id: example
            with:
              image: 1111111111111.dkr.ecr.us-east-2.amazonaws.com/cloudposse/example-app-on-ecs
              image-tag: latest
              region: us-east-2
              operation: deploy
              cluster: acme-plat-ue2-sandbox
              application: acme-plat-ue2-sandbox-example-app-on-ecs
              taskdef-path: taskdef.json

        outputs:
          result: ${{ steps.example.outputs.webapp-url }}
  ```

  ## S3 Mirroring

  S3 Mirroring is a pattern of uploading the deployed task definition to an S3 Bucket. This is so that the task definition can be updated with the latest image tag, and the terraform does not reset it back to a previous tag set in the infrastructure repository.

  ## Partial Task Definition

  A "Partial Task Definition" is an authoring pattern where the application repository maintains only the parts of the ECS task definition that the app team owns or changes frequently (for example, container image/tag, environment variables, command/args, CPU/memory for a container). The more static, infrastructure-owned parts (for example, IAM roles, volumes, EFS mounts, log configuration, task-level networking) are provided by a template maintained in the infrastructure repository.

  During deployment, this action merges the infrastructure-provided template (optionally fetched from S3) with the local partial task definition from the application repo to produce a complete `task-definition.json`, which is then deployed by `ecspresso`.

  ![S3 Mirroring](docs/github-action-deploy-ecspresso_s3-mirroring.drawio.png)

include: []
contributors: []
